[project]
name = "ft8ping"
version = "0"
readme = "README.md"
description = "ICMP over FT8"
requires-python = ">=3.13"
dependencies = [
    "click>=8.1.8",
    "scapy>=2.6.1",
    "structlog",
]

[project.scripts]
std_call_to_c28 = "ft8ping.std_call_to_c28:main"
ft8ping = "ft8ping.ft8ping:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
branch = true
dynamic_context = "test_function"

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true

[tool.coverage.html]
show_contexts = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",  # I don't intend to annotate everything
    "D",  # I like the desire to docstring everything and do it well, but no, not here
    "FBT003",  # Sometimes boolean args are ok
    "FIX001",  # Yes I have FIXMEs
    "FIX002",  # Yes I have TODOs
    "PLR0913",  # Yes sometimes I could do with fewer args to functions but it's ok
    "PLR2004",  # I appreciate that magic numbers aren't great, but part of this project is just plain magical
    "RET504",  # I will assign to a variable and return it if I want to
    "RUF003",  # There's nothing wrong with en-dashen
    "RUF005",  # I have considered [*foo, "bar", "baz"] and decided otherwise
    "RUF021",  # Yes parenthesising things can be helpful but not if black will just remove them
    "S",  # flake8-bandit complains about me using assert *in tests*
    "T201",  # Sometimes print is ok
    "TD",  # Please chill out about my TODOs
]

[dependency-groups]
dev = [
    "black",
    "coverage",
    "mypy",
    "pytest",
    "pytest-subprocess>=1.5.3",
    "ruff",
    "ty>=0.0.0a8",
]
